#cloud-config
packages:
  - zip
package_update: true
package_upgrade: false

write_files:
  # backend daemon
  - path: /etc/systemd/system/tutor-backend.service
    content: |
      [Unit]
      Description=Tutor Backend
      [Service]
      User=root
      WorkingDirectory=/opt/tutor-backend
      ExecStart=/opt/tutor-backend/tutor-backend
      Restart=always
      Environment="CAMPUS_URL={{ .CampusUrl }}"
      Environment="APP_MODE={{ .TutorAppMode }}"
      Environment="TRAINING_FILE={{ .TutorTrainingFile }}"
      Environment="TOKEN={{ .TutorToken }}"
      [Install]
      WantedBy=multi-user.target

  # ide daemon
  - path: /etc/systemd/system/tutor-ide.service
    content: |
      [Unit]
      Description=Tutor IDE
      [Service]
      User=root
      WorkingDirectory=/opt/tutor-ide
      ExecStart=node ./src-gen/backend/main.js /root/training --hostname 0.0.0.0 --port 8081
      Restart=always
      [Install]
      WantedBy=multi-user.target

  # nginx backend config
  - path: /etc/nginx/sites-enabled/tutor-backend.conf
    content: |
      server {
          listen 80;
          listen [::]:80;
          server_name {{ .TutorApiDomain }};
          access_log /var/log/nginx/backend-access.log;
          error_log /var/log/nginx/backend-error.log;
          location / {
              proxy_pass http://127.0.0.1:8080;
          }
      }

  # nginx ide config
  - path: /etc/nginx/sites-enabled/tutor-ide.conf
    content: |
      server {
          listen 80;
          listen [::]:80;    
          server_name {{ .TutorIdeDomain }};
          access_log /var/log/nginx/ide-access.log;
          error_log /var/log/nginx/ide-error.log;
          location /{{ .TutorToken }}/ {
              proxy_pass         http://127.0.0.1:8081/;
          }
      }

runcmd:
  - echo "================================================= CloudInit Phase Printout CloudInit Vars"
  - echo "CloudInit Var GitRepo= {{ .GitRepo }}"
  - echo "CloudInit Var TutorApiDomain= {{ .TutorApiDomain }}"
  - echo "CloudInit Var TutorIdeDomain= {{ .TutorIdeDomain }}"
  - echo "CloudInit Var CampusUrl= {{ .CampusUrl }}"
  - echo "CloudInit Var DomainEmail= {{ .DomainEmail }}"
  - echo "CloudInit Var TutorAppMode= {{ .TutorAppMode }}"
  - echo "CloudInit Var TutorTrainingFile= {{ .TutorTrainingFile }}"
  - echo "CloudInit Var TutorToken= {{ .TutorToken }}"

  - echo "================================================= CloudInit Phase Create tutor-init.yaml"
  - touch /root/tutor-init.yaml
  - echo "phases:" >> /root/tutor-init.yaml

  - echo "================================================= CloudInit Phase Patch .bashrc"
  - echo 'PS1="\[\033[0;32m\]\u@\H \[\033[0;34m\]\w >\e[0m "' >> /root/.bashrc
  - echo "  - Patch .bashrc" >> /root/tutor-init.yaml

  - echo "================================================= CloudInit Phase Setup Firewall"
  - ufw --force enable
  - ufw default allow
  - ufw deny 8080
  - ufw deny 8081
  - echo "  - Setup Firewall" >> /root/tutor-init.yaml

  - echo "================================================= CloudInit Phase Install Tutor Backend"
  - curl https://github.com/stroebitzer/tutor-backend/releases/latest/
  - curl -LO https://github.com/stroebitzer/tutor-backend/releases/latest/download/tutor-backend
  - mkdir -p /opt/tutor-backend
  - chmod +x tutor-backend
  - mv tutor-backend /opt/tutor-backend/tutor-backend
  - systemctl daemon-reload
  - systemctl start tutor-backend.service
  - systemctl enable tutor-backend.service
  - echo "  - Install Tutor Backend" >> /root/tutor-init.yaml

  - echo "================================================= CloudInit Phase Install Tutor IDE"
  - curl https://github.com/stroebitzer/tutor-ide/releases/latest/
  - curl -LO https://github.com/stroebitzer/tutor-ide/releases/latest/download/tutor-ide.zip
  - mkdir -p /opt/tutor-ide
  - unzip tutor-ide.zip -d /opt/tutor-ide && rm tutor-ide.zip
  - curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
  - DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs libsecret-1-dev
  - mkdir -p /root/.theia
  - cp /opt/tutor-ide/settings.json /root/.theia/settings.json
  - systemctl daemon-reload
  - systemctl start tutor-ide.service
  - systemctl enable tutor-ide.service
  - echo "  - Install Tutor IDE" >> /root/tutor-init.yaml

  - echo "================================================= CloudInit Phase Clone Gitrepo"
  - git clone {{ .GitRepo }} /training
  - echo "  - Clone Gitrepo" >> /root/tutor-init.yaml

  - echo "================================================= CloudInit Phase Install Nginx"
  - DEBIAN_FRONTEND=noninteractive apt-get install -y nginx=1.18.0-0ubuntu1.3
  - apt-mark hold nginx
  - rm /etc/nginx/sites-enabled/default
  - echo "  - Install Nginx" >> /root/tutor-init.yaml

  - echo "================================================= CloudInit Phase Install Tutor Certbot"
  - DEBIAN_FRONTEND=noninteractive apt-get install -y certbot=0.40.0-1ubuntu0.1 python3-certbot-nginx=0.40.0-0ubuntu0.1
  - apt-mark hold certbot python3-certbot-nginx
  - certbot --nginx -d {{ .TutorApiDomain }} -d {{ .TutorIdeDomain }} -m {{ .DomainEmail }} --redirect -n --agree-tos
  - crontab -l | { cat; echo "0 12 * * * /usr/bin/certbot renew --quiet"; } | crontab -
  - systemctl restart nginx.service
  - echo "  - Install Certbot" >> /root/tutor-init.yaml

  - echo "================================================= CloudInit Finished Successfully"
  - echo "  - Finished Successfully" >> /root/tutor-init.yaml
  - reboot
